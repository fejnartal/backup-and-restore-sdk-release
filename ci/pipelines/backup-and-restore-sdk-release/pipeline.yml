---
bosh-lite-creds: &bosh-lite-creds
  BOSH_ENVIRONMENT: ((infrastructure/bosh-lite-director.director_url))
  BOSH_CLIENT: ((infrastructure/bosh-lite-director.director_username))
  BOSH_CLIENT_SECRET: ((infrastructure/bosh-lite-director.director_password))
  BOSH_CA_CERT: ((infrastructure/bosh-lite-director.director_ca_cert))
  BOSH_GW_USER: jumpbox
  BOSH_GW_HOST: ((infrastructure/bosh-lite-director.jumpbox_host))
  BOSH_GW_PRIVATE_KEY: ((infrastructure/bosh-lite-director.jumpbox_ssh_key))

aws-region: &aws-region eu-west-1
aws-backup-region: &aws-backup-region eu-central-1

mysql-deployment-name: &mysql-deployment-name mysql-dev
mysql-host: &mysql-host 10.244.1.9
mysql-port: &mysql-port 3306
mysql-username: &mysql-username root
mysql-password: &mysql-password mysql_password

postgres-9-4-deployment-name: &postgres-9-4-deployment-name postgres-9-4-dev
postgres-9-4-host: &postgres-9-4-host 10.244.1.10
postgres-9-4-port: &postgres-9-4-port 5432
postgres-9-4-username: &postgres-9-4-username test_user
postgres-9-4-password: &postgres-9-4-password postgres_password

postgres-9-6-deployment-name: &postgres-9-6-deployment-name postgres-9-6-dev
postgres-9-6-host: &postgres-9-6-host 10.244.1.11
postgres-9-6-port: &postgres-9-6-port 5432
postgres-9-6-username: &postgres-9-6-username test_user
postgres-9-6-password: &postgres-9-6-password postgres_password
postgres-9-6-ssl-username: &postgres-9-6-ssl-username ssl_user
postgres-9-6-ssl-password: &postgres-9-6-ssl-password postgres_password
postgres-9-6-tls-username: &postgres-9-6-tls-username mutual_tls_user
postgres-9-6-tls-common-name: &postgres-9-6-tls-common-name postgres96

postgres-10-deployment-name: &postgres-10-deployment-name postgres-10-dev
postgres-10-host: &postgres-10-host 10.244.1.12
postgres-10-port: &postgres-10-port 5432
postgres-10-username: &postgres-10-username test_user
postgres-10-password: &postgres-10-password postgres_password

postgres-11-deployment-name: &postgres-11-deployment-name postgres-11-dev
postgres-11-host: &postgres-11-host 10.244.1.13
postgres-11-port: &postgres-11-port 5432
postgres-11-username: &postgres-11-username test_user
postgres-11-password: &postgres-11-password postgres_password

gcp-mysql-5-7-ca-cert-path: &gcp-mysql-5-7-ca-cert-path "gcp-mysql_5_7-test-server-cert.pem"
gcp-mysql-5-7-client-cert-path: &gcp-mysql-5-7-client-cert-path "gcp-mysql_5_7-test-client-cert.pem"
gcp-mysql-5-7-client-key-path: &gcp-mysql-5-7-client-key-path "gcp-mysql_5_7-test-client-key.pem"
gcp-postgres-9-6-ca-cert-path: &gcp-postgres-9-6-ca-cert-path "gcp-postgres_9_6-test-server-cert.pem"
gcp-postgres-9-6-mutual-tls-ca-cert-path: &gcp-postgres-9-6-mutual-tls-ca-cert-path "gcp-postgres_9_6_mutual_tls-test-server-cert.pem"
gcp-postgres-9-6-mutual-tls-client-cert-path: &gcp-postgres-9-6-mutual-tls-client-cert-path "gcp-postgres_9_6_mutual_tls-test-client-cert.pem"
gcp-postgres-9-6-mutual-tls-client-key-path: &gcp-postgres-9-6-mutual-tls-client-key-path "gcp-postgres_9_6_mutual_tls-test-client-key.pem"

vault_creds: &vault_creds
  url: ((vault/server.url))
  role_id: ((vault/resource_credentials.role_id))
  secret_id: ((vault/resource_credentials.secret_id))

groups:
- name: build
  jobs:
  - set-pipeline
  - unit-tests
  - system-tests-internal-dbs
  - system-tests-external-dbs-gcp
  - system-tests-external-dbs-rds
  - system-tests-blobstore-backuper
  - contract-tests
  - merge-pr

resource_types:
- name: file-url
  type: docker-image
  source:
    repository: pivotalservices/concourse-curl-resource
    tag: latest

- name: bosh-deployment
  type: docker-image
  source:
    repository: cloudfoundry/bosh-deployment-resource

- name: bosh-io-stemcell
  type: docker-image
  source:
    repository: concourse/bosh-io-stemcell-resource

- name: custom-terraform
  type: docker-image
  source:
    repository: ljfranklin/terraform-resource
    tag: 0.14.2

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource

- name: vault
  type: docker-image
  source:
    repository: wfernandes/vault-resource
    tag: latest

- name: gitgat
  type: docker-image
  source:
    repository: cryogenics/concourse-gitgat-resource
    tag: latest

- name: dynamic-metalink
  type: docker-image
  source:
    repository: dpb587/dynamic-metalink-resource

- name: github-status
  type: docker-image
  source:
    repository: resource/github-status

resources:
- name: rds-ca-bundle
  type: file-url
  icon: web-box
  source:
    url: https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem
    filename: rds-combined-ca-bundle.pem

- name: terraform
  type: custom-terraform
  icon: terraform
  source:
    backend_type: gcs
    backend_config:
      bucket: bbr-terraform-states
      prefix: bbr-sdk-pr-tests
      credentials: ((gcp/service_accounts/bucket_owner.json_key))

- name: backup-and-restore-sdk-release
  type: git
  check_every: 1m
  icon: source-pull
  source:
    uri: git@github.com:cloudfoundry-incubator/backup-and-restore-sdk-release.git
    private_key: ((github.ssh_key))
    branch: ((branch))

- name: gcp-db-certs
  type: vault
  icon: lock
  source:
    <<: *vault_creds
    path: /concourse/bosh-backup-restore/gcp-db-certs

- name: github-sdk-key
  type: vault
  icon: lock
  source:
    <<: *vault_creds
    path: /concourse/bosh-backup-restore/github-sdk

- name: cryogenics-meta
  type: git
  icon: github
  source:
    uri: git@github.com:pivotal-cf/cryogenics-meta.git
    private_key: ((github.ssh_key))
    branch: main

- name: cryogenics-concourse-tasks
  type: git
  icon: github
  source:
    uri: git@github.com:pivotal/cryogenics-concourse-tasks.git
    private_key: ((github.ssh_key))
    branch: main

- name: six-hours
  type: time
  icon: timer-outline
  source:
    interval: 6h
    start: 9:00 AM
    stop: 5:00 PM
    days: [Monday, Tuesday, Wednesday, Thursday, Friday]

- name: commit-status
  type: github-status
  source:
    repo: cloudfoundry-incubator/backup-and-restore-sdk-release
    access_token: ((github.access_token))

update_commit_status: &update_commit_status
  on_success: { put: commit-status, params: { path: backup-and-restore-sdk-release, state: success }}
  on_failure: { put: commit-status, params: { path: backup-and-restore-sdk-release, state: failure }}
  on_error:   { put: commit-status, params: { path: backup-and-restore-sdk-release, state: failure }}
  on_abort:   { put: commit-status, params: { path: backup-and-restore-sdk-release, state: failure }}

jobs:
- name: set-pipeline
  serial: true
  << : *update_commit_status
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
  - set_pipeline: backup-and-restore-sdk-release
    file: backup-and-restore-sdk-release/ci/pipelines/backup-and-restore-sdk-release/pipeline.yml

- name: unit-tests
  serial: true
  << : *update_commit_status
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
      passed: [set-pipeline]
    - get: github-sdk-key
    - get: cryogenics-concourse-tasks
    - get: six-hours
      trigger: true
  - in_parallel:
    - do:
      - task: find-pr-story
        attempts: 5
        file: cryogenics-concourse-tasks/tracker-automation/find-pr-story/task.yml
        input_mapping:
          pr: backup-and-restore-sdk-release
        params:
          TRACKER_API_TOKEN: ((tracker.api_token))
          TRACKER_PROJECT_ID: ((tracker.project_id))
          GIT_REPOSITORY: cloudfoundry-incubator/backup-and-restore-sdk-release
      - task: start-story
        attempts: 5
        file: cryogenics-concourse-tasks/tracker-automation/start-story/task.yml
        input_mapping:
          pr: backup-and-restore-sdk-release
        params:
          TRACKER_API_TOKEN: ((tracker.api_token))
          TRACKER_PROJECT_ID: ((tracker.project_id))
          ESTIMATE: 1
    - task: sdk-template-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-template-unit-tests/task.yml
    - task: databases-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/database-unit-tests/task.yml
      privileged: true
    - task: s3-blobstore-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: s3-blobstore-backup-restore
        GINKGO_EXTRA_FLAGS: -p --skipPackage s3bucket
    - task: azure-blobstore-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: azure-blobstore-backup-restore
        GINKGO_EXTRA_FLAGS: -p --skipPackage contract_test
    - task: gcs-blobstore-unit-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: gcs-blobstore-backup-restore
        GINKGO_EXTRA_FLAGS: -p --skipPackage contract_test

- name: contract-tests
  serial: true
  << : *update_commit_status
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed: [unit-tests]
      trigger: true
    - get: six-hours
      trigger: true
      passed: [ unit-tests ]
  - in_parallel:
    - task: aws-s3-blobstore-contract-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: s3-blobstore-backup-restore/s3bucket
        S3_LIVE_REGION: *aws-region
        S3_BACKUP_REGION: *aws-backup-region
        S3_ENDPOINT: ""
        S3_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
        S3_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))
        S3_BIG_FILE_BUCKET: "large-blob-test-bucket-unversioned"
    - task: gcs-blobstore-contract-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: gcs-blobstore-backup-restore/contract_test
        GCP_SERVICE_ACCOUNT_KEY: ((gcp/service_accounts/owner_role.json_key))
        GCP_PROJECT_NAME: cf-backup-and-restore
    - task: azure-blobstore-contract-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-unit-blobstore/task.yml
      params:
        PACKAGE_NAME: azure-blobstore-backup-restore/contract_test
        AZURE_STORAGE_ACCOUNT: ((azure_credentials.storage_account_1))
        AZURE_STORAGE_KEY: ((azure_credentials.storage_key_1))
        AZURE_STORAGE_ACCOUNT_NO_SOFT_DELETE: ((azure_credentials.storage_account_no_soft_delete))
        AZURE_STORAGE_KEY_NO_SOFT_DELETE: ((azure_credentials.storage_key_no_soft_delete))
        AZURE_DIFFERENT_STORAGE_ACCOUNT: ((azure_credentials.storage_account_2))
        AZURE_DIFFERENT_STORAGE_KEY: ((azure_credentials.storage_key_2))
        AZURE_CONTAINER_NAME_MANY_FILES: bbr-test-many-blobs-azure-container

- name: system-tests-external-dbs-gcp
  serial: true
  << : *update_commit_status
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      passed: [unit-tests]
      trigger: true
    - get: cryogenics-meta
    - get: gcp-db-certs
    - get: six-hours
      trigger: true
      passed: [ unit-tests ]
  - in_parallel:
    - do:
      - put: gcp-terraform
        resource: terraform
        params:
          terraform_source: cryogenics-meta/ci/pipelines/backup-and-restore-sdk-release/terraform/bbr-sdk-system-tests/gcp
          env_name: bbr-sdk-external-gcp-dbs
          delete_on_failure: true
          vars:
            director-external-ip: ((infrastructure/bosh-lite-director.director_external_ip))
            director-jumpbox-ip: ((infrastructure/bosh-lite-director.jumpbox_host))
            gcp-key: ((gcp/service_accounts/owner.json_key))
            mysql-5-7-password: ((backup-and-restore-sdk-release.gcp_mysql_5_7_password))
            postgres-9-6-password: ((backup-and-restore-sdk-release.gcp_postgres_9_6_password))
        get_params:
          output_statefile: true
      - task: create-gcp-db-certs
        file: backup-and-restore-sdk-release/ci/tasks/create-gcp-db-certs/task.yml
        input_mapping:
          terraform-state: gcp-terraform
        params:
          GCP_SERVICE_ACCOUNT_KEY: ((gcp/service_accounts/owner.json_key))
          PROJECT_NAME: mapbu-cryogenics
        ensure:
          put: gcp-db-certs
          params:
            data: gcp-db-certs
  - in_parallel:
    - do: # postgres gcp system tests
      - task: postgres-system-tests-9.6
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: gcp-terraform
          cert-store: gcp-db-certs
        params:
          DB_PREFIX: postgres_9_6
          DB_TYPE: postgres
          TEST_SUITE_NAME: postgresql
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.gcp_postgres_9_6_password))
      - task: postgres-tls-system-tests-9.6
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: gcp-terraform
          cert-store: gcp-db-certs
        params:
          DB_PREFIX: postgres_9_6
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: *gcp-postgres-9-6-ca-cert-path
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.gcp_postgres_9_6_password))
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_tls
          TEST_TLS_VERIFY_IDENTITY: false
      - task: postgres-mutual-tls-system-tests-9.6
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: gcp-terraform
          cert-store: gcp-db-certs
        params:
          DB_PREFIX: postgres_9_6_mutual_tls
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: *gcp-postgres-9-6-mutual-tls-ca-cert-path
          POSTGRES_CLIENT_CERT_PATH: *gcp-postgres-9-6-mutual-tls-client-cert-path
          POSTGRES_CLIENT_KEY_PATH: *gcp-postgres-9-6-mutual-tls-client-key-path
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.gcp_postgres_9_6_password))
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_mutual_tls
          TEST_TLS_VERIFY_IDENTITY: false
    - task: mysql-system-tests-5.7
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
      input_mapping:
        terraform-state: gcp-terraform
        cert-store: gcp-db-certs
      params:
        DB_PREFIX: mysql_5_7
        DB_TYPE: mysql
        MYSQL_CA_CERT_PATH: *gcp-mysql-5-7-ca-cert-path
        MYSQL_CLIENT_CERT_PATH: *gcp-mysql-5-7-client-cert-path
        MYSQL_CLIENT_KEY_PATH: *gcp-mysql-5-7-client-key-path
        MYSQL_PASSWORD: ((backup-and-restore-sdk-release.gcp_mysql_5_7_password))
        TEST_SUITE_NAME: mysql
        TEST_TLS_VERIFY_IDENTITY: false

- name: system-tests-external-dbs-rds
  serial: true
  << : *update_commit_status
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
      passed: [unit-tests]
    - get: cryogenics-meta
    - get: cert-store
      resource: rds-ca-bundle
    - get: six-hours
      trigger: true
      passed: [ unit-tests ]
  - in_parallel:
    - put: terraform
      params:
        terraform_source: cryogenics-meta/ci/pipelines/backup-and-restore-sdk-release/terraform/bbr-sdk-system-tests/aws/
        env_name: bbr-sdk-external-rds-dbs
        delete_on_failure: true
        vars:
          aws_access_key: ((aws_credentials.access_key_id))
          aws_secret_key: ((aws_credentials.secret_access_key))
          aws_region: *aws-region
          mysql_5_7_password: ((backup-and-restore-sdk-release.rds_5_7_password))
          postgres_9_6_password: ((backup-and-restore-sdk-release.rds_postgres_9_6_password))
          postgres_10_password: ((backup-and-restore-sdk-release.rds_postgres_10_password))
          postgres_11_password: ((backup-and-restore-sdk-release.rds_postgres_11_password))
          postgres_13_password: ((backup-and-restore-sdk-release.rds_postgres_13_password))
          mariadb_10_password: ((backup-and-restore-sdk-release.rds_mariadb_10_password))
      get_params:
        output_statefile: true
  - in_parallel:
    - do:
      - task: postgres-system-tests-9.6
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: postgres_9_6
          DB_TYPE: postgres
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.rds_postgres_9_6_password))
          TEST_SUITE_NAME: postgresql
      - task: postgres-tls-system-tests-9.6
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: postgres_9_6
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: rds-combined-ca-bundle.pem
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.rds_postgres_9_6_password))
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_tls
    - do:
      - task: postgres-system-tests-10
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: postgres_10
          DB_TYPE: postgres
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.rds_postgres_10_password))
          TEST_SUITE_NAME: postgresql
      - task: postgres-tls-system-tests-10
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: postgres_10
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: rds-combined-ca-bundle.pem
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.rds_postgres_10_password))
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_tls
    - do:
      - task: postgres-system-tests-11
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: postgres_11
          DB_TYPE: postgres
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.rds_postgres_11_password))
          TEST_SUITE_NAME: postgresql
      - task: postgres-tls-system-tests-11
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: postgres_11
          DB_TYPE: postgres
          POSTGRES_CA_CERT_PATH: rds-combined-ca-bundle.pem
          POSTGRES_PASSWORD: ((backup-and-restore-sdk-release.rds_postgres_11_password))
          TEST_SSL_USER_REQUIRES_SSL: false
          TEST_SUITE_NAME: postgresql_tls
    - do:
      - task: maria-system-tests-10-2
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          DB_PREFIX: mariadb_10_2
          DB_TYPE: mysql
          MYSQL_CA_CERT_PATH: rds-combined-ca-bundle.pem
          MYSQL_PASSWORD: ((backup-and-restore-sdk-release.rds_mariadb_10_password))
          TEST_SUITE_NAME: mysql
          TEST_TLS_MUTUAL_TLS: false
          TEST_TLS_VERIFY_IDENTITY: false
    - do:
      - task: mysql-system-tests-5.7
        file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/terraform-task.yml
        input_mapping:
          terraform-state: terraform
        params:
          <<: *bosh-lite-creds
          TEST_SUITE_NAME: mysql
          MYSQL_PASSWORD: ((backup-and-restore-sdk-release.rds_5_7_password))
          MYSQL_PORT: 3306
          MYSQL_USERNAME: root
          MYSQL_CA_CERT_PATH: rds-combined-ca-bundle.pem
          TEST_TLS_MUTUAL_TLS: false
          DB_TYPE: mysql
          DB_PREFIX: mysql_5_7

- name: system-tests-internal-dbs
  serial: true
  << : *update_commit_status
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
      passed: [unit-tests]
    - get: cert-store
      resource: gcp-db-certs
    - get: six-hours
      trigger: true
      passed: [ unit-tests ]
  - in_parallel:
    - task: postgres-system-tests-9.4
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        POSTGRES_HOSTNAME: *postgres-9-4-host
        POSTGRES_PASSWORD: *postgres-9-4-password
        POSTGRES_PORT: *postgres-9-4-port
        POSTGRES_USERNAME: *postgres-9-4-username
        TEST_SUITE_NAME: postgresql
    - task: postgres-system-tests-9.6
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        POSTGRES_HOSTNAME: *postgres-9-6-host
        POSTGRES_PASSWORD: postgres_password
        POSTGRES_USERNAME: test_user
        TEST_SUITE_NAME: postgresql
    - task: postgres-system-tests-10
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        POSTGRES_HOSTNAME: *postgres-10-host
        POSTGRES_PASSWORD: *postgres-10-password
        POSTGRES_PORT: *postgres-10-port
        POSTGRES_USERNAME: *postgres-10-username
        TEST_SUITE_NAME: postgresql
    - task: postgres-system-tests-11
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
      params:
        POSTGRES_HOSTNAME: *postgres-11-host
        POSTGRES_PASSWORD: *postgres-11-password
        POSTGRES_PORT: *postgres-11-port
        POSTGRES_USERNAME: *postgres-11-username
        TEST_SUITE_NAME: postgresql
  - task: postgres-tls-system-tests-9.6
    file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
    params:
      POSTGRES_CA_CERT: ((backup-and-restore-sdk-release-db-certs.postgres_96_ca_cert))
      POSTGRES_HOSTNAME: *postgres-9-6-host
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_USERNAME: ssl_user
      TEST_SUITE_NAME: postgresql_tls
      TEST_TLS_VERIFY_IDENTITY: false
  - task: postgres-mutual-tls-system-tests-9.6
    file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
    params:
      POSTGRES_CA_CERT: ((backup-and-restore-sdk-release-db-certs.postgres_96_ca_cert))
      POSTGRES_CLIENT_CERT: ((backup-and-restore-sdk-release-db-certs.postgres_96_client_cert))
      POSTGRES_CLIENT_KEY: ((backup-and-restore-sdk-release-db-certs.postgres_96_client_key))
      POSTGRES_HOSTNAME: *postgres-9-6-host
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_USERNAME: mutual_tls_user
      TEST_SUITE_NAME: postgresql_mutual_tls
      TEST_TLS_VERIFY_IDENTITY: false
  - task: mariadb-system-tests
    file: backup-and-restore-sdk-release/ci/tasks/sdk-system-db/task.yml
    params:
      TEST_SUITE_NAME: mysql
      MYSQL_HOSTNAME: *mysql-host
      MYSQL_PORT: *mysql-port
      MYSQL_USERNAME: *mysql-username
      MYSQL_PASSWORD: *mysql-password
      MYSQL_CA_CERT: ((backup-and-restore-sdk-release-db-certs.mysql_ca_cert))
      MYSQL_CLIENT_CERT: ((backup-and-restore-sdk-release-db-certs.mysql_client_cert))
      MYSQL_CLIENT_KEY: ((backup-and-restore-sdk-release-db-certs.mysql_client_key))
      TEST_TLS_VERIFY_IDENTITY: false
      TEST_TLS_MUTUAL_TLS: false

- name: system-tests-blobstore-backuper
  serial: true
  << : *update_commit_status
  plan:
  - in_parallel:
    - get: backup-and-restore-sdk-release
      trigger: true
      passed: [unit-tests]
    - get: six-hours
      trigger: true
      passed: [ unit-tests ]
  - in_parallel:
    - task: s3
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        <<: *bosh-lite-creds
        TEST_SUITE_NAME: s3
        BOSH_DEPLOYMENT: s3-backuper
        AWS_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
        AWS_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))
        AWS_TEST_BUCKET_NAME: bbr-system-test-bucket
        AWS_TEST_BUCKET_REGION: *aws-region
        AWS_TEST_CLONE_BUCKET_NAME: bbr-system-test-bucket-clone
        AWS_TEST_CLONE_BUCKET_REGION: *aws-backup-region
        AWS_TEST_UNVERSIONED_BUCKET_NAME: bbr-system-test-bucket-unversioned
        AWS_TEST_UNVERSIONED_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_BUCKET_NAME: bbr-system-test-s3-unversioned-bucket
        S3_UNVERSIONED_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_BACKUP_BUCKET_NAME: bbr-system-test-s3-unversioned-backup-bucket
        S3_UNVERSIONED_BACKUP_BUCKET_REGION: us-east-1
        S3_UNVERSIONED_BPM_BUCKET_NAME: sdk-system-test-unversioned-bpm
        S3_UNVERSIONED_BPM_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_BPM_BACKUP_BUCKET_NAME: sdk-system-test-unversioned-bpm-backup
        S3_UNVERSIONED_BPM_BACKUP_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BUCKET_NAME: sdk-large-number-of-files
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BACKUP_BUCKET_NAME: sdk-large-number-of-files-backup
        S3_UNVERSIONED_LARGE_NUMBER_OF_FILES_BACKUP_BUCKET_REGION: *aws-region
        S3_UNVERSIONED_CLONE_BUCKET_NAME: sdk-unversioned-clone
        S3_UNVERSIONED_CLONE_BUCKET_REGION: us-east-1
    - task: s3-with-iam-instance-profile
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        TEST_SUITE_NAME: s3
        FOCUS_SPEC: backs up and restores in-place # focus on one it to avoid redundant testing
        BOSH_ENVIRONMENT: "((infrastructure/director-with-iam-profile.director_url))"
        BOSH_CLIENT_SECRET: "((infrastructure/director-with-iam-profile.director_password))"
        BOSH_CLIENT: "((infrastructure/director-with-iam-profile.director_username))"
        BOSH_DEPLOYMENT: s3-backuper
        BOSH_CA_CERT: "((infrastructure/director-with-iam-profile.director_ca_cert))"
        BOSH_GW_USER: jumpbox
        BOSH_GW_HOST: "((infrastructure/director-with-iam-profile.jumpbox_host))"
        BOSH_GW_PRIVATE_KEY: "((infrastructure/director-with-iam-profile.jumpbox_ssh_key))"
        AWS_ACCESS_KEY_ID: ((aws_credentials.access_key_id))
        AWS_SECRET_ACCESS_KEY: ((aws_credentials.secret_access_key))
        AWS_TEST_BUCKET_NAME: iam-instance-role-test
        AWS_TEST_BUCKET_REGION: *aws-region
        AWS_TEST_CLONE_BUCKET_NAME: iam-instance-role-test-clone
        AWS_TEST_CLONE_BUCKET_REGION: *aws-region
        AWS_TEST_UNVERSIONED_BUCKET_NAME: bbr-system-test-bucket-unversioned
        AWS_TEST_UNVERSIONED_BUCKET_REGION: *aws-region
    - task: azure-system-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        <<: *bosh-lite-creds
        TEST_SUITE_NAME: azure
        BOSH_DEPLOYMENT: azure-backuper
        AZURE_STORAGE_ACCOUNT: ((azure_credentials.storage_account_1))
        AZURE_STORAGE_KEY: ((azure_credentials.storage_key_1))
        AZURE_CONTAINER_NAME: bbr-system-test-azure-container
        AZURE_DIFFERENT_STORAGE_ACCOUNT: ((azure_credentials.storage_account_2))
        AZURE_DIFFERENT_STORAGE_KEY: ((azure_credentials.storage_key_2))
        AZURE_DIFFERENT_CONTAINER_NAME: bbr-system-test-azure-different-container
    - task: gcs-blobstore-backuper-system-tests
      file: backup-and-restore-sdk-release/ci/tasks/sdk-system-blobstore/task.yml
      params:
        <<: *bosh-lite-creds
        TEST_SUITE_NAME: gcs
        GCP_SERVICE_ACCOUNT_KEY: ((gcp/service_accounts/owner_role.json_key))
        GCP_PROJECT_NAME: cf-backup-and-restore
        GCS_BUCKET_NAME: bbr-system-test-gcs-bucket
        GCS_BACKUP_BUCKET_NAME: bbr-system-test-gcs-backup-bucket
        GCS_CLONE_BUCKET_NAME: bbr-system-test-gcs-clone-bucket
        BOSH_DEPLOYMENT: gcs-backuper
